setwd(C:\Users\Tobia\Documents\infi-Greinöcker-lab-report-6)
setwd("C:\Users\Tobia\Documents\infi-Greinöcker-lab-report-6")
setwd("C:\Users\Tobia\Documents\")
pint(getwd())
setwd("C:\Users\Tobia\Documents\infi-Greinöcker-lab-report-6")
print(getwd())
setwd("C:/Users/Tobia/Documents/infi-Greinöcker-lab-report-6")
print(getwd())
print(getwd())
#1 MySQL-Vorbereitung
# Download oder Klonen der Dateien über github https://github.com/datacharmer/test_db
# Installation der Datenbank über cmd hat nicht funktioniert, daher direkt in MySQL-Workbench die Employee.sql ausgeführt.
#2 Datenbank-Verbindung vorbereiten
require(RMySQL)
#1 MySQL-Vorbereitung
# Download oder Klonen der Dateien über github https://github.com/datacharmer/test_db
# Installation der Datenbank über cmd hat nicht funktioniert, daher direkt in MySQL-Workbench die Employee.sql ausgeführt.
#2 Datenbank-Verbindung vorbereiten
require(RMySQL)
#1 MySQL-Vorbereitung
# Download oder Klonen der Dateien über github https://github.com/datacharmer/test_db
# Installation der Datenbank über cmd hat nicht funktioniert, daher direkt in MySQL-Workbench die Employee.sql ausgeführt.
#2 Datenbank-Verbindung vorbereiten
require(RMySQL)
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinöecker", password="infi-greinoecker", host="localhost")
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinoecker", password="infi-greinoecker", host="localhost")
tables = dvListTables(dbConnection)
source("~/infi-Greinöcker-lab-report-6/lab_report_6.R", encoding = 'UTF-8', echo=TRUE)
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinoecker", password="infi-greinoecker", dbname="employees", host="localhost")
tables = dbListTables(dbConnection)
#2.1 Auswertungen
resultsWorkingPeople <- dbSendQuery(
dbConnection,
"SELECT  departments.dept_name as abteilung, count(dept_emp.emp_no) as anzahl_mitarbeiter"+
"FROM dept_emp"+
"RIGHT JOIN departments"+
"ON dept_emp.dept_no = departments.dept_no"+
"WHERE dept_emp.to_date = \"9999-01-01\""+
"GROUP BY dept_emp.dept_no"+
"ORDER BY dept_emp.dept_no;"
)
#2.1 Auswertungen
resultsWorkingPeople <- dbSendQuery(
dbConnection,
"SELECT  departments.dept_name as abteilung, count(dept_emp.emp_no) as anzahl_mitarbeiter"+
"FROM dept_emp"+
"RIGHT JOIN departments"+
"ON dept_emp.dept_no = departments.dept_no"+
"WHERE dept_emp.to_date = \"9999-01-01\""+
"GROUP BY dept_emp.dept_no"+
"ORDER BY dept_emp.dept_no;"
)
print(query)
query <- "SELECT  departments.dept_name as abteilung, count(dept_emp.emp_no) as anzahl_mitarbeiter"+
"FROM dept_emp"+
"RIGHT JOIN departments"+
"ON dept_emp.dept_no = departments.dept_no"+
"WHERE dept_emp.to_date = \"9999-01-01\""+
"GROUP BY dept_emp.dept_no"+
"ORDER BY dept_emp.dept_no;"
query <- ""
print(query)
query <- "SELECT  departments.dept_name as abteilung, count(dept_emp.emp_no) as anzahl_mitarbeiter FROM dept_emp RIGHT JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE dept_emp.to_date = "9999-01-01" GROUP BY dept_emp.dept_no ORDER BY dept_emp.dept_no;"
query <- "SELECT  departments.dept_name as abteilung, count(dept_emp.emp_no) as anzahl_mitarbeiter FROM dept_emp RIGHT JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE dept_emp.to_date = \"9999-01-01\" GROUP BY dept_emp.dept_no ORDER BY dept_emp.dept_no;"
print(query)
resultsWorkingPeople <- dbSendQuery(dbConnection, query)
resultsWorkingPeople <- dbSendQuery(dbConnection, query)
resultsWorkingPeople <- dbSendQuery(dbConnection, query)
View(resultsWorkingPeople)
View(resultsWorkingPeople)
View(resultsWorkingPeople)
View(resultsWorkingPeople)
dataWorkingPeople <- fetch(resultsWorkingPeople, -1)
View(dataWorkingPeople)
View(dataWorkingPeople)
boxplot(dataWorkingPeople)
#2.1 Auswertungen
query <- "SELECT  departments.dept_name as abteilung, dept_emp.emp_no as anzahl_mitarbeiter FROM dept_emp RIGHT JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE dept_emp.to_date = "9999-01-01" ORDER BY dept_emp.dept_no;"
View(resultsWorkingPeople)
View(resultsWorkingPeople)
#1 MySQL-Vorbereitung
# Download oder Klonen der Dateien über github https://github.com/datacharmer/test_db
# Installation der Datenbank über cmd hat nicht funktioniert, daher direkt in MySQL-Workbench die Employee.sql ausgeführt.
#2 Datenbank-Verbindung vorbereiten
require(RMySQL)
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinoecker", password="infi-greinoecker", dbname="employees", host="localhost")
tables = dbListTables(dbConnection)
#2.1 Auswertungen
query <- "SELECT  departments.dept_name as abteilung, dept_emp.emp_no as anzahl_mitarbeiter FROM dept_emp RIGHT JOIN departments ON dept_emp.dept_no = departments.dept_no WHERE dept_emp.to_date = \"9999-01-01\" ORDER BY dept_emp.dept_no;"
resultsWorkingPeople <- dbSendQuery(dbConnection, query)
dataWorkingPeople <- fetch(resultsWorkingPeople, -1)
boxplot(dataWorkingPeople)
View(resultsWorkingPeople)
View(dataWorkingPeople)
boxplot(dataWorkingPeople.anzahl_mitarbeiter~dataWorkingPeople.abteilung)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, axis=FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, axis=FALSE)
dataWorkingPeople
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, axis=FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, axes=FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, title=FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, xlab = FALSE, ylab = FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, xlab = FALSE, ylab = FALSE)
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, xlab = , ylab = )
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=3, xlab = "", ylab = "")
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=2, xlab = "", ylab = "")
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=2, xlab = "", ylab = "")
#2.1.2
query <- "SELECT employees.emp_no, sum(salaries.salary), employees.gender FROM salaries LEFT JOIN employees ON salaries.emp_no = employees.emp_no GROUP BY employees.emp_no;"
resultSalaryOverGender <- dbSendQuery(dbConnection, query)
resultSalaryOverGender <- dbSendQuery(dbConnection, query)
dataSalaryOverGender<- fetch(resultSalaryOverGender, -1)
#2.1.2
query <- "SELECT employees.emp_no, sum(salaries.salary), employees.gender FROM salaries LEFT JOIN employees ON salaries.emp_no = employees.emp_no GROUP BY employees.emp_no;"
resultSalaryOverGender <- dbSendQuery(dbConnection, query)
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinoecker", password="infi-greinoecker", dbname="employees", host="localhost")
resultSalaryOverGender <- dbSendQuery(dbConnection, query)
dataSalaryOverGender<- fetch(resultSalaryOverGender, -1)
View(dataSalaryOverGender)
boxplot(dataSalaryOverGender$`sum(salaries.salary)`~dataSalaryOverGender$gender)
boxplot(dataSalaryOverGender$`sum(salaries.salary)`~dataSalaryOverGender$gender, xlab = "Gender", ylab = "Verdienst")
#2.1.3
query <- "SELECT sum(salary) as salaries, d.dept_name as abteilung FROM salaries s INNER JOIN dept_emp de ON s.emp_no = de.emp_no INNER JOIN departments d ON de.dept_no = d.dept_no GROUP BY de.emp_no ORDER BY d.dept_no;"
resultSalaryOverDepartment <- dbSendQuery(dbConnection, query)
dataSalaryOverDepartment <- fetch(resultSalaryOverDepartment, -1)
boxplot(dataSalaryOverDepartment$salaries~dataSalaryOverDepartment$abteilung)
boxplot(dataSalaryOverDepartment$salaries~dataSalaryOverDepartment$abteilung, las=2, xlab = "", ylab = "")
#2.2
query <- "SELECT * FROM salaries WHERE emp_no = 492917 ORDER BY from_date DESC;"
resultSalaryHistoryFROM492917 <- dbSendQuery(dbConnection, query)
dataSalaryHistoryFrom492917 <- fetch(resultSalaryHistoryFROM492917, -1)
#2.2
query <- "SELECT salary, from_date FROM salaries WHERE emp_no = 492917 ORDER BY from_date DESC;"
resultSalaryHistoryFROM492917 <- dbSendQuery(dbConnection, query)
dataSalaryHistoryFrom492917 <- fetch(resultSalaryHistoryFROM492917, -1)
line(dataSalaryHistoryFrom492917$from_date, dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$from_date, dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$salary~dataSalaryHistoryFrom492917$from_date)
dataSalaryHistoryFrom492917$salary
plot(dataSalaryHistoryFrom492917$from_date~dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$from_date, dataSalaryHistoryFrom492917$salary, xlabel=, ylabel=)
View(dataSalaryHistoryFrom492917)
plot(dataSalaryHistoryFrom492917$from_date, dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$from_date~dataSalaryHistoryFrom492917$salary)
#2.2
query <- "SELECT salary, from_date FROM salaries WHERE emp_no = 492917 ORDER BY from_date DESC;"
resultSalaryHistoryFROM492917 <- dbSendQuery(dbConnection, query)
dataSalaryHistoryFrom492917 <- fetch(resultSalaryHistoryFROM492917, -1)
plot(dataSalaryHistoryFrom492917$from_date~dataSalaryHistoryFrom492917$salary)
dataSalaryHistoryFrom492917$from_date
dataSalaryHistoryFrom492917$salary
plot(dataSalaryHistoryFrom492917$salary)
#2.2
query <- "SELECT salary, from_date FROM salaries WHERE emp_no = 492917 ORDER BY from_date;"
resultSalaryHistoryFROM492917 <- dbSendQuery(dbConnection, query)
dataSalaryHistoryFrom492917 <- fetch(resultSalaryHistoryFROM492917, -1)
plot(dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$salary, [1985:2002])
plot(dataSalaryHistoryFrom492917$salary, 1985:2002)
plot(dataSalaryHistoryFrom492917$salary)
plot(dataSalaryHistoryFrom492917$salary, , 1985:2002)
plot(dataSalaryHistoryFrom492917$salary, 1985:2002)
plot(1985:2002,dataSalaryHistoryFrom492917$salary)
plot(1985:2002,dataSalaryHistoryFrom492917$salary, xlab="year", ylab="salary")
#2.3
#2.3.1
query <- "SELECT avg(salary) as average_salary, YEAR(to_date) as year FROM salaries group by YEAR(to_date) order by YEAR(to_date);"
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
plot(dataAverageSalaryPerYear)
View(dataAverageSalaryPerYear)
#2.3
#2.3.1
query <- "SELECT avg(salary) as average_salary, YEAR(from_date) as year FROM salaries group by YEAR(from_date) order by YEAR(from_date);"
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
plot(dataAverageSalaryPerYear)
year <- 1985:2030
regression <- lm(year~dataAverageSalaryPerYear$average_salary)
regression <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
plot(dataAverageSalaryPerYear, year)
abline(l)
abline(regression)
predict <- predict(regression, data.frame(c(2020:2030)))
points(c(2020:2030),)
lm <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
predictAverageSalaryPerYear <- (lmAverageSalaryPerYear, data.frame(c(2020:2030)))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(c(2020:2030)))
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(c(2020:2030)))
predictAverageSalaryPerYear
lmRegression <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
plot(dataAverageSalaryPerYear, year)
abline(predictAverageSalaryPerYear)
abline(predictAverageSalaryPerYear)
abline(lmRegression)
points(c(2020:2030),predictAverageSalaryPerYear)
points(predictAverageSalaryPerYear)
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2030))
points(1995:2030,predictAverageSalaryPerYear)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year)
abline(lmRegression)
points(1995:2030,predictAverageSalaryPerYear)
points(2020:2030,predictAverageSalaryPerYear)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=9:1000000)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=(9:1000000)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=c(0:1000000)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=c(0:1000000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=c(0:10000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=(0:1000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, ylim=10000)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, xlim=c(1980,2030),ylim=c(10000, 11000))
11000
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, xlim=c(1980,2030),ylim=c(100, 11000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, xlim=c(1980,2030),ylim=c(100, 110000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, xlim=c(1980,2030),ylim=c(0, 110000))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, xlim=c(1980,2030),ylim=c(0, 53182))
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year)
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 53182))
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2030))
lmRegression <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year)
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2030))
lmRegression <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year)
abline(lmRegression)
points(2020:2030,predictAverageSalaryPerYear)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$year, , xlim=c(1980,2030),ylim=c(0, 53182))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 53182))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 10000))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 100000))
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2030))
lmRegression <- lm(dataAverageSalaryPerYear$year~dataAverageSalaryPerYear$average_salary)
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 100000))
abline(lmRegression)
points(2020:2030,predictAverageSalaryPerYear)
lmRegression <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1980,2030),ylim=c(0, 100000))
abline(lmRegression)
points(2020:2030,predictAverageSalaryPerYear)
#2.3
#2.3.1
query <- "SELECT avg(salary) as average_salary, YEAR(from_date) as year FROM salaries group by YEAR(from_date) order by YEAR(from_date);"
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
lmAverageSalaryPerYear
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2030))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2035))
lmAverageSalaryPerYear
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(c(2020:2035))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(c(2020:2035)))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(2020:2035))
dataAverageSalaryPerYear
dataAverageSalaryPerYear$year
lmAverageSalaryPerYear <- lm(dataAverageSalaryPerYear$average_salary~dataAverageSalaryPerYear$year)
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary)
abline(lmAverageSalaryPerYear)
abline(lmAverageSalaryPerYear, col="red")
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim= c(1985:2030), ylim=c(0,100000))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim= c(1985:2030), ylim=c(0,100000))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1985:2030), ylim=c(1,100000))
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1985:2030), ylim=c(1,100000));
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1985:2030), ylim=c(0:100000));
plot(dataAverageSalaryPerYear$year, dataAverageSalaryPerYear$average_salary, xlim=c(1985,2030), ylim=c(0,100000));
abline(lmAverageSalaryPerYear, col="red")
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(years=(2020:2030)))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(years=(2020:2030)))
#2.3
#2.3.1
query <- "SELECT avg(salary) as average_salary, YEAR(from_date) as year FROM salaries group by YEAR(from_date) order by YEAR(from_date);"
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
years= dataAverageSalaryPerYear$year
salaries = dataAverageSalaryPerYear$average_salary
salaries = as.nunmeric(dataAverageSalaryPerYear$average_salary)
salaries = as.numeric(dataAverageSalaryPerYear$average_salary)
lmAverageSalaryPerYear <- lm(salaries~years)
plot(years, salaries, xlim=c(1985,2030), ylim=c(0,100000));
plot(years, salaries);
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
years= dataAverageSalaryPerYear$year
salaries = as.numeric(dataAverageSalaryPerYear$average_salary)
lmAverageSalaryPerYear <- lm(salaries~years)
plot(years, salaries);
plot(years, salaries);
plot(salaries);
plot(as.numeric(dataAverageSalaryPerYear$average_salary));
plot(dataAverageSalaryPerYear$average_salary);
plot(dataAverageSalaryPerYear$average_salary);
plot(dataAverageSalaryPerYear$average_salary);
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$average_salary);
#2.3
#2.3.1
query <- "SELECT avg(salary) as average_salary, YEAR(from_date) as year FROM salaries group by YEAR(from_date) order by YEAR(from_date);"
resultAverageSalaryPerYear <- dbSendQuery(dbConnection, query)
dataAverageSalaryPerYear <- fetch(resultAverageSalaryPerYear, -1)
plot(dataAverageSalaryPerYear$average_salary, dataAverageSalaryPerYear$average_salary);
years= dataAverageSalaryPerYear$year
salaries = as.numeric(dataAverageSalaryPerYear$average_salary)
lmAverageSalaryPerYear <- lm(salaries~years)
plot(years, salaries);
plot(years, salaries, xlim= c(2000, 2030), ylim=c(450000,1000000));
plot(years, salaries, xlim= c(2000, 2030), ylim=c(0,1000000));
plot(years, salaries, xlim= c(1985, 2030), ylim=c(0,1000000));
plot(years, salaries, xlim= c(1985, 2030), ylim=c(0,100000));
plot(years, salaries, xlim= c(1985, 2030), ylim=c(4000,100000));
plot(years, salaries, xlim= c(1985, 2030), ylim=c(40000,100000));
plot(years, salaries, xlim= c(1985, 2030), ylim=c(50000,100000));
lmAverageSalaryPerYear <- lm(salaries~years)
plot(years, salaries, xlim= c(1985, 2030), ylim=c(50000,100000));
abline(lmAverageSalaryPerYear, col="red")
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(years=(2020:2030)))
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(years=(2020:2030)))
points(2020:2030, predictAverageSalaryPerYear, col="green")
resultCorrelation <- dbSendQuery(dbConnection, query)
#2.4
query <- "SELECT e.birth_date, sum(s.salary) FROM employees e INNER JOIN salaries s ON e.emp_no = s.emp_no GROUP BY e.birth_date ORDER BY e.birth_date DESC;"
resultCorrelation <- dbSendQuery(dbConnection, query)
# Wenn das Paket nicht installiert ist,  taucht (wenn nicht evtl. speichern) im Oberen Datei-Bereich ein Balken auf,
# und man lässt RStudio die nötigen Pakete installieren
dbConnection = dbConnect(MySQL(), user="infi-greinoecker", password="infi-greinoecker", dbname="employees", host="localhost")
#2.4
query <- "SELECT e.birth_date, sum(s.salary) FROM employees e INNER JOIN salaries s ON e.emp_no = s.emp_no GROUP BY e.birth_date ORDER BY e.birth_date DESC;"
resultCorrelation <- dbSendQuery(dbConnection, query)
dataCorrelation <- fetch(resultCorrelation, -1)
cor.test(dataCorrelation$birth_date,dataCorrelation$`sum(s.salary)`)
#2.4
query <- "SELECT (year(now())-year(e.birth_date)) as age, avg(s.salary) FROM employees e INNER JOIN salaries s ON e.emp_no = s.emp_no GROUP BY age ORDER BY age;"
resultCorrelation <- dbSendQuery(dbConnection, query)
dataCorrelation <- fetch(resultCorrelation, -1)
cor.test(dataCorrelation$age,dataCorrelation$`avg(s.salary)`)
cor = cor.test(dataCorrelation$age,dataCorrelation$`avg(s.salary)`)
cor
boxplot(dataWorkingPeople$anzahl_mitarbeiter~dataWorkingPeople$abteilung, las=2, xlab = "", ylab = "")
boxplot(dataSalaryOverGender$`sum(salaries.salary)`~dataSalaryOverGender$gender, xlab = "Gender", ylab = "Verdienst")
boxplot(dataSalaryOverDepartment$salaries~dataSalaryOverDepartment$abteilung, las=2, xlab = "", ylab = "")
boxplot(dataSalaryOverDepartment$salaries~dataSalaryOverDepartment$abteilung, las=2, xlab = "", ylab = "")
plot(1985:2002,dataSalaryHistoryFrom492917$salary, xlab="year", ylab="salary")
plot(1985:2002,dataSalaryHistoryFrom492917$salary, xlab="year", ylab="salary", type=l)
plot(1985:2002,dataSalaryHistoryFrom492917$salary, xlab="year", ylab="salary", type="l")
plot(years, salaries, xlim= c(1985, 2030), ylim=c(50000,100000));
abline(lmAverageSalaryPerYear, col="red")
#2.3.2
predictAverageSalaryPerYear <- predict(lmAverageSalaryPerYear, data.frame(years=(2020:2030)))
points(2020:2030, predictAverageSalaryPerYear, col="green")
points(2020:2030, predictAverageSalaryPerYear, col="blue")
cor = cor.test(dataCorrelation$age,dataCorrelation$`avg(s.salary)`)
cor # 0.3420241
